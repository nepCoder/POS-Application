//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.8.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using SD.LLBLGen.Pro.ORMSupportClasses;
using SD.LLBLGen.Pro.QuerySpec.Adapter;

namespace POS.Application.LLBL.SqlServer
{
	/// <summary>Class which contains the static logic to execute retrieval stored procedures in the database.</summary>
	public static partial class RetrievalProcedures
	{

		/// <summary>Calls stored procedure 'SpCustomerSel'.<br/><br/></summary>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpCustomerSel()
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpCustomerSel(dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpCustomerSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpCustomerSel(IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpCustomerSelCall(dataAccessProvider))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpCustomerSel'.</summary>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpCustomerSelCallAsQuery()
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpCustomerSelCallAsQuery(dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpCustomerSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpCustomerSelCallAsQuery(IDataAccessCore dataAccessProvider)
		{
			return CreateSpCustomerSelCall(dataAccessProvider).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpProductSel'.<br/><br/></summary>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpProductSel()
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpProductSel(dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpProductSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpProductSel(IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpProductSelCall(dataAccessProvider))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpProductSel'.</summary>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpProductSelCallAsQuery()
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpProductSelCallAsQuery(dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpProductSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpProductSelCallAsQuery(IDataAccessCore dataAccessProvider)
		{
			return CreateSpProductSelCall(dataAccessProvider).ToRetrievalQuery();
		}

		/// <summary>Creates the call object for the call 'SpCustomerSel' to stored procedure 'SpCustomerSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpCustomerSelCall(IDataAccessCore dataAccessProvider)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Bikash].[dbo].[SpCustomerSel]", "SpCustomerSel");
		}

		/// <summary>Creates the call object for the call 'SpProductSel' to stored procedure 'SpProductSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpProductSelCall(IDataAccessCore dataAccessProvider)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Bikash].[dbo].[SpProductSel]", "SpProductSel");
		}


	}
}
